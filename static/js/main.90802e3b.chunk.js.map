{"version":3,"sources":["components/FeedbackOptions/Feedback.styled.jsx","components/FeedbackOptions/Feedback.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Styles.jsx","components/App.jsx","index.js"],"names":["FeedbackBtn","styled","button","FeedbackOp","options","onLeaveFeedback","map","option","onClick","type","Note","p","Notification","message","Title","h2","SectionCont","section","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","Styles","createGlobalStyle","App","state","totalFeedback","Object","values","reduce","ac","item","positiveFeedback","res","Math","round","Number","isNaN","onFeedback","setState","prevState","this","keys","Component","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"uOAEaA,EAAcC,IAAOC,OAAM,8L,OCC3BC,EAAa,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAe,EAAfA,gBAAe,OACnD,8BACGD,EAAQE,KAAI,SAACC,GAAM,OAClB,cAACP,EAAW,CACVQ,QAAS,kBAAMH,EAAgBE,EAAO,EAEtCE,KAAK,SAAQ,SAEZF,GAHIA,EAIO,KAEZ,ECZKG,EAAOT,IAAOU,EAAC,qECEfC,EAAe,SAAH,GAAqB,IAAfC,EAAO,EAAPA,QAC7B,OAAO,cAACH,EAAI,UAAEG,GAChB,ECJaC,EAAQb,IAAOc,GAAE,2FAMjBC,EAAcf,IAAOgB,QAAO,qECJ5BC,EAAU,SAAH,GAA6B,IAAvBC,EAAK,EAALA,MAAOC,EAAQ,EAARA,SAC/B,OACE,eAACJ,EAAW,WACV,cAACF,EAAK,UAAEK,IACPC,IAGP,ECRaC,EAAa,SAAH,OAAMC,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAG,EAAHA,IAAKC,EAAK,EAALA,MAAOC,EAAkB,EAAlBA,mBAAkB,OACxE,+BACE,+BAAI,SAAOJ,KACX,+BAAI,YAAUC,KACd,+BAAI,QAAMC,KACV,+BAAI,UAAQC,KACZ,+BAAI,sBAAoBC,EAAmB,SACxC,ECRMC,EAASC,YAAiB,6sBCK1BC,EAAG,iKAoBZ,OApBY,oCACdC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,GACL,EAEFO,cAAgB,WACd,OAAOC,OAAOC,OAAO,EAAKH,OAAOI,QAAO,SAACC,EAAIC,GAAI,OAAMD,EAAMC,CAAI,GACnE,EAAE,EAEFC,iBAAmB,WACjB,IAAMC,EAAMC,KAAKC,MAAO,EAAKV,MAAMR,KAAO,EAAKS,gBAAmB,KAClE,OAAQU,OAAOC,MAAMJ,GAAa,EAANA,CAC9B,EAAE,EAEFK,WAAa,SAAApC,GACX,EAAKqC,UAAS,SAAAC,GAAS,sBACpBtC,EAASsC,EAAUtC,GAAU,EAAC,GAEnC,EAAC,EA6BA,OA7BA,mCAED,WACE,MAA+BuC,KAAKhB,MAA5BR,EAAI,EAAJA,KAAMC,EAAO,EAAPA,QAASC,EAAG,EAAHA,IACjBuB,EAAOf,OAAOe,KAAKD,KAAKhB,OACxBL,EAAQqB,KAAKf,gBACbL,EAAqBoB,KAAKT,mBAEhC,OACE,qCACE,cAACV,EAAM,IACP,cAAC,EAAO,CAACR,MAAM,wBAAuB,SACpC,cAAC,EAAU,CAACf,QAAS2C,EAAM1C,gBAAiByC,KAAKH,eAEnD,cAAC,EAAO,CAACxB,MAAM,aAAY,SACxBM,EACC,cAAC,EAAU,CACTH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAY,CAACb,QAAQ,0BAKhC,KAAC,EAjDa,CAASmC,aCHzBC,IAASC,WAAWC,SAASC,eAAe,SAASC,OACnD,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,M","file":"static/js/main.90802e3b.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const FeedbackBtn = styled.button`\n  width: 120px;\n  padding: 5px;\n  border-radius: 5px;\n  margin: 10px;\n  font-size: 24px;\n  font-style: italic;\n  color: white;\n  background-color: black;\n`;","import React from \"react\";\nimport { FeedbackBtn } from \"./Feedback.styled\";\n\nexport const FeedbackOp = ({ options, onLeaveFeedback }) => (\n  <div>\n    {options.map((option) => (\n      <FeedbackBtn\n        onClick={() => onLeaveFeedback(option)}\n        key={option}\n        type=\"button\"\n      >\n        {option}\n      </FeedbackBtn>\n    ))}\n  </div>\n);","import styled from \"styled-components\";\n\nexport const Note = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Note } from \"./Notification.styled\";\n\nexport const Notification = ({ message }) => {\n  return <Note>{message}</Note>;\n};\n\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};","import styled from \"styled-components\";\n\nexport const Title = styled.h2`\nmargin-top: 20px;  \nmargin-bottom: 10px;\nfont-size: 40px;  \n`;\n\nexport const SectionCont = styled.section`\n  padding: 10px;\n  text-align: center;\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Title, SectionCont } from \"./Section.styled\";\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionCont>\n      <Title>{title}</Title>\n      {children}\n    </SectionCont>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};","import { createGlobalStyle } from \"styled-components\";\n\nexport const Styles = createGlobalStyle`\n* {\n  box-sizing: border-box;\n  }\n  html {\n    scroll-behavior: smooth;\n  }\n  body {\n    min-height: 100vh;\n    margin: 0;\n    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen', 'Ubuntu',\n    'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    background-color: #fff;\n    color: #010101;\n    line-height: 1.5;\n    scroll-behavior: smooth;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  img {\n    display: block;\n    max-width: 100%;\n  }\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6,\n  p {\n    margin: 0;\n  }\n`;","import { Component } from 'react';\nimport { FeedbackOp } from './FeedbackOptions/Feedback';\nimport { Notification } from './Notification/Notification';\nimport { Section } from './Section/Section';\nimport { Statistics } from './Statistics/Statistics';\nimport { Styles } from './Styles';\n\nexport class App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  totalFeedback = () => {\n    return Object.values(this.state).reduce((ac, item) => (ac += item));\n  };\n\n  positiveFeedback = () => {\n    const res = Math.round((this.state.good / this.totalFeedback()) * 100);\n    return !Number.isNaN(res) ? res : 0;\n  };\n\n  onFeedback = option => {\n    this.setState(prevState => ({\n      [option]: prevState[option] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keys = Object.keys(this.state);\n    const total = this.totalFeedback();\n    const positivePercentage = this.positiveFeedback();\n\n    return (\n      <>\n        <Styles />\n        <Section title=\"Please leave feedback\">\n          <FeedbackOp options={keys} onLeaveFeedback={this.onFeedback} />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n//test\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { App } from 'components/App';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}